syntax = "proto3";

package Proto;

import "import.proto";

enum Enum {
	first = 0;
	middle = 1;
	last = 2;
}

// Not sibling enum
message MsgEnumWrapper {
	enum Enum {
		first = 0;
		middle = -1;
		last = -2;
	}
}

message ExternalMsg {
	optional string external_msg_field = 1;
}

message Msg {
	// Nested enum is not a sibling, so we can use same enum name
	enum NestedEnum {
		first = 0;
		middle = -1;
		last = 100;
	}

	message NestedMessage {
		optional string nested_message_field = 1;
	}

	optional int32 optional_int32 = 1;
	repeated int32 repeated_int32 = 2;

	optional string optional_string = 3;
	repeated string repeated_string = 4;

	optional ExternalMsg optional_external_msg = 5;
	optional ExternalMsg repeated_external_msg = 6;

	optional NestedMessage optional_nested_msg = 7;
	optional NestedMessage repeated_nested_msg = 8;

	optional Enum optional_enum = 9;
	repeated Enum repeated_enum = 10;

	optional NestedEnum optional_nested_enum = 11;
	repeated NestedEnum repeated_nested_enum = 12;

	optional MsgEnumWrapper.Enum optional_wrapped_enum = 13;
	repeated MsgEnumWrapper.Enum repeated_wrapped_enum = 14;

	map<int32, int32> map_int32_int32 = 15;
	map<string, NestedMessage> map_string_nested_msg = 16;
	map<string, MsgEnumWrapper> map_string_wrapper_msg = 17;

	optional Imported.MsgImported optional_imported = 18;
	repeated Imported.MsgImported repeated_imported = 19;
}

